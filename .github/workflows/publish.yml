name: Release with SLSA Provenance

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'

permissions: read-all

jobs:
  # Build and release with GoReleaser
  goreleaser:
    runs-on: ubuntu-latest
    outputs:
      hashes: ${{ steps.hash.outputs.hashes }}
    permissions:
      contents: write # To upload assets to release
      packages: write # To push container images
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: true

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Install ko
        uses: ko-build/setup-ko@v0.7

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          version: '~> v2'
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          KO_DOCKER_REPO: ghcr.io/pythoninthegrass/gb

      - name: Generate subject hashes
        id: hash
        env:
          ARTIFACTS: "dist/*.tar.gz dist/*.zip dist/checksums.txt"
        run: |
          set -euo pipefail

          checksum_file=$(echo "$ARTIFACTS" | tr ' ' '\n' | grep checksums.txt)
          hashes=$(cat $checksum_file | base64 -w0)
          echo "hashes=$hashes" >> "$GITHUB_OUTPUT"

  # Generate SLSA provenance
  provenance:
    needs: [goreleaser]
    permissions:
      actions: read   # To read the workflow path
      id-token: write # To sign the provenance
      contents: write # To add assets to a release
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v2.1.0
    with:
      base64-subjects: "${{ needs.goreleaser.outputs.hashes }}"
      upload-assets: true # Upload to the release

  # Optional: Generate container provenance
  # container-provenance:
  #   needs: [goreleaser]
  #   permissions:
  #     actions: read
  #     id-token: write
  #     packages: write
  #   if: startsWith(github.ref, 'refs/tags/')
  #   uses: slsa-framework/slsa-github-generator/.github/workflows/generator_container_slsa3.yml@v2.1.0
  #   with:
  #     image: ghcr.io/pythoninthegrass/gb
  #     digest: ${{ needs.goreleaser.outputs.digest }}
  #     registry-username: ${{ github.actor }}
  #   secrets:
  #     registry-password: ${{ secrets.GITHUB_TOKEN }}
